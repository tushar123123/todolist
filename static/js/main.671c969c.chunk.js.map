{"version":3,"sources":["Components/Todo.js","Components/TodoList.js","Components/TodoForm.js","App.js","index.js"],"names":["Todo","todos","completeTodo","removeTodo","updateTodo","useState","id","value","edit","setEdit","onSubmit","map","todo","index","className","isComplete","onClick","text","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","TodoForm","props","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","preventDefault","Math","floor","random","type","placeholder","name","onChange","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAsCeA,MAhCf,YAA2D,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,aAAaC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,WACzC,EAAwBC,mBAAS,CAC7BC,GAAI,KACJC,MAAO,KAFX,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OAAGD,EAAKF,GACG,cAAC,EAAD,CAAUE,KAAQA,EAAME,SATd,SAAAH,GACjBH,EAAWI,EAAKF,GAAGC,GACnBE,EAAQ,CACJH,GAAG,KACHC,MAAM,QAOPN,EAAMU,KAAI,SAACC,EAAKC,GAAN,OACb,sBAAKC,UAAWF,EAAKG,WAAW,oBAAoB,WAApD,UACI,qBAAmBC,QAAS,kBAAMd,EAAaU,EAAKN,KAApD,SACKM,EAAKK,MADAL,EAAKN,IAGf,sBAAKQ,UAAU,QAAf,UACI,cAAC,IAAD,CAAmBE,QAAU,kBAAKb,EAAWS,EAAKN,KAClDQ,UAAU,iBACV,cAAC,IAAD,CAAUE,QAAU,kBAAKP,EAAQ,CAACH,GAAGM,EAAKN,GAAGC,MAAMK,EAAKK,QACxDH,UAAU,oBARoDD,OC2B/DK,MA/Cf,WACI,MAAyBb,mBAAS,IAAlC,mBAAOJ,EAAP,KAAakB,EAAb,KAqCA,OACI,gCACI,4DACA,cAAC,EAAD,CAAUT,SAtCF,SAAAE,GAAQ,IAAD,EACnB,GAAIA,EAAKK,OAAQ,QAAQG,KAAKR,EAAKK,MAAnC,CAIA,IAAMI,EAAQ,CAAIT,GAAJ,mBAAYX,IAE1BkB,EAASE,IACT,EAAAC,SAAQC,IAAR,SAAYX,GAAZ,mBAAoBX,SA+BhB,cAAC,EAAD,CAAMA,MAAOA,EAAOC,aAbP,SAAAI,GACjB,IAAIkB,EAAevB,EAAMU,KAAI,SAAAC,GAIzB,OAHGA,EAAKN,KAAOA,IACXM,EAAKG,YAAcH,EAAKG,YAErBH,KAEXO,EAASK,IAM2CrB,WAnBrC,SAAAG,GACf,IAAMmB,EAAY,YAAIxB,GAAOyB,QAAO,SAAAd,GAAI,OAAIA,EAAKN,KAAMA,KAEvDa,EAASM,IAgBoErB,WA3B9D,SAACuB,EAAOC,GACnBA,EAASX,OAAQ,QAAQG,KAAKQ,EAASX,OAI3CE,GAAS,SAAAU,GAAI,OAAIA,EAAKlB,KAAI,SAAAmB,GAAI,OAAIA,EAAKxB,KAAOqB,EAASC,EAAUE,eCiB1DC,MAtCf,SAAkBC,GACd,MAAyB3B,mBAAS,IAAlC,mBAAO4B,EAAP,KAAaC,EAAb,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOnC,QAatB,OACI,sBAAMO,UAAU,YAAYJ,SAXX,SAAA+B,GACjBA,EAAEE,iBACFX,EAAMtB,SAAS,CACXJ,GAAIsC,KAAKC,MAAoB,IAAdD,KAAKE,UACpB7B,KAAMgB,IAGVC,EAAS,KAIT,SAECF,EAAMxB,KAAQ,qCAAE,uBAAOuC,KAAK,OAAOC,YAAY,gBAAgBzC,MAAO0B,EAAOgB,KAAK,OAAOnC,UAAU,kBAAkBoC,SAAUV,EAAcW,IAAKhB,IACnJ,wBAAQrB,UAAU,mBAAlB,4BAGG,yCAAG,uBAAOiC,KAAK,OAAOC,YAAY,aAAazC,MAAO0B,EAAOgB,KAAK,OAAOnC,UAAU,aAAaoC,SAAUV,EAAcW,IAAKhB,IAChI,wBAAQrB,UAAU,cAAlB,sBADG,UCpBIsC,MARf,WACE,OACE,qBAAKtC,UAAU,WAAf,SACA,cAAC,EAAD,OCHJuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.671c969c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport {AiFillCloseCircle} from 'react-icons/ai';\r\nimport {TiEdit} from 'react-icons/ti';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction Todo({todos,completeTodo,removeTodo,updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id,value);\r\n        setEdit({\r\n            id:null,\r\n            value:''\r\n        });\r\n    };\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit = {edit} onSubmit = {submitUpdate}/>;\r\n    }\r\n    return todos.map((todo,index) => (\r\n        <div className={todo.isComplete?'todo-row complete':'todo-row' } key={index} >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className='icons'>\r\n                <AiFillCloseCircle onClick= {()=> removeTodo(todo.id)}\r\n                className=\"delete-icons\"/>\r\n                <TiEdit   onClick= {()=> setEdit({id:todo.id,value:todo.text })}\r\n                className=\"edit-icons\"/>\r\n            </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo\r\n","import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos,setTodos] = useState([]); \r\n\r\n    const addTodo = todo =>{\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo,...todos]\r\n\r\n        setTodos(newTodos); \r\n        console.log(todo,...todos);\r\n\r\n    };\r\n\r\n    const updateTodo = (todoId,newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item =>(item.id === todoId ? newValue :item)));\r\n    };\r\n\r\n    const removeTodo = id =>{\r\n        const removeArr = [...todos].filter(todo => todo.id !==id);\r\n\r\n        setTodos(removeArr);\r\n    }; \r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo=>{\r\n            if(todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>what's the plan for today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo } updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, {useState,useEffect,useRef} from 'react'\r\nimport TodoList from './TodoList';\r\n\r\nfunction TodoForm(props) {\r\n    const [input,setInput] = useState('');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e =>{\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handlesubmit = e =>{\r\n        e.preventDefault();\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n        \r\n    }\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handlesubmit}>\r\n\r\n        {props.edit? ( <><input type='text' placeholder=\"update a todo\" value={input} name='text' className=\"todo-input edit\" onChange={handleChange} ref={inputRef}/>\r\n        <button className=\"todo-button edit\" >update todo</button>\r\n        </>\r\n        ) :\r\n         ( <> <input type='text' placeholder=\"Add a todo\" value={input} name='text' className=\"todo-input\" onChange={handleChange} ref={inputRef}/>\r\n        <button className=\"todo-button\" >Add todo</button> </>)\r\n    }\r\n           \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import react from 'react';\nimport './App.css';\nimport TodoForm from './Components/TodoForm';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n    <TodoList/> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}